generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        Int      @id @default(autoincrement())
  name      String
  cnpj      String   @unique
  plan      String   // "basic", "intermediate", "advanced"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   // "admin", "seller", "financial", "employee"
  tenantId  Int
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  personId  Int?     @unique
  person    Person?  @relation(fields: [personId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Tabela unificada para Clientes, Fornecedores e Colaboradores (por tenant)
model Person {
  id            Int      @id @default(autoincrement())
  type          String   // "PF" ou "PJ"
  isClient      Boolean  @default(false)
  isSupplier    Boolean  @default(false)
  isEmployee    Boolean  @default(false)
  name          String
  surname       String?
  cpfCnpj       String   @unique
  birthDate     DateTime?
  age           Int?     // Calculado automaticamente no backend
  gender        String?  // "M", "F", "Other"
  email         String?
  phone         String?
  addressCep    String?
  addressStreet String?
  addressNumber String?
  addressComplement String?
  addressNeighborhood String?
  addressCity   String?
  addressState  String?
  addressCountry String?   @default("Brasil")
  bankDetails   Json?    // { description, keyType, pixKey, bank }
  observations  String?
  attachment    String?  // Caminho do arquivo no servidor
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User?    @relation(fields: [id], references: [personId])
}